name: 构建 SukiSU 内核

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      CPU:
        description: 'CPU 类型'
        default: 'sm8750'
        required: false
      FEIL:
        description: '设备代号'
        default: 'oneplus_ace5_pro'
        required: false
      ANDROID_VERSION:
        description: 'Android 版本'
        default: 'android15'
        required: false
      KERNEL_VERSION:
        description: '内核版本'
        default: '6.6'
        required: false
      KERNEL_NAME:
        description: '内核名称'
        default: '-android15-8-g013ec21bba94-abogki383916444@DUGH'
        required: false

jobs:
  build-kernel:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码仓库
        uses: actions/checkout@v4

      - name: 设置环境变量
        run: |
          echo "CCACHE_COMPILERCHECK=%compiler% -dumpmachine; %compiler% -dumpversion" >> $GITHUB_ENV
          echo "CCACHE_NOHASHDIR=true" >> $GITHUB_ENV
          echo "CCACHE_HARDLINK=true" >> $GITHUB_ENV
          echo "CPU=${{ github.event.inputs.CPU || 'sm8750' }}" >> $GITHUB_ENV
          echo "FEIL=${{ github.event.inputs.FEIL || 'oneplus_ace5_pro' }}" >> $GITHUB_ENV
          echo "ANDROID_VERSION=${{ github.event.inputs.ANDROID_VERSION || 'android15' }}" >> $GITHUB_ENV
          echo "KERNEL_VERSION=${{ github.event.inputs.KERNEL_VERSION || '6.6' }}" >> $GITHUB_ENV
          echo "KERNEL_NAME=${{ github.event.inputs.KERNEL_NAME || '-android15-8-g013ec21bba94-abogki383916444@DUGH' }}" >> $GITHUB_ENV
          echo "WORKSPACE_ROOT=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "OUTPUT_DIR=$GITHUB_WORKSPACE/kernel_output_dir" >> $GITHUB_ENV

      - name: 安装系统依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 git curl ccache gcc flex bison libssl-dev libelf-dev zip openjdk-11-jdk
          curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/bazel.gpg
          echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
          sudo apt-get update
          sudo apt-get install -y bazel
          bazel --version

      - name: 安装 repo 工具
        run: |
          if ! command -v repo >/dev/null 2>&1; then
            curl -s --connect-timeout 10 https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
            if [ ! -f "~/repo" ]; then
              echo "无法下载 repo 工具"
              exit 1
            fi
            chmod +x ~/repo
            sudo mv ~/repo /usr/local/bin/repo
          fi
          repo --version

      - name: 清理系统空间
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/hostedtoolcache/CodeQL /usr/local/haskell
          sudo apt-get clean
          sudo rm -rf /tmp/*
          df -h

      - name: 清理补丁目录
        run: |
          for dir in SukiSU_patch susfs4ksu kernel_patches; do
            if [ -d "$dir" ]; then
              echo "删除旧补丁目录: $dir"
              rm -rf "$dir"
            fi
          done

      - name: 管理内核源码
        run: |
          mkdir -p work
          cd work || exit 1
          if [ -d ".repo" ] && [ ! -f ".repo/manifest.xml" ]; then
            echo "检测到损坏的 .repo 目录，清理..."
            rm -rf .repo
          fi
          if [ -d ".repo" ]; then
            echo "更新现有源码仓库..."
            repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/$CPU -m $FEIL.xml --depth=1 || exit 1
            for retry in {1..3}; do
              echo "同步尝试 ($retry/3)..."
              if repo sync -c -j4 --no-tags --force-sync; then
                echo "同步成功"
                break
              else
                echo "同步失败，重试..."
                find .repo -name '*.lock' -delete
                repo forall -c 'git reset --hard HEAD@{upstream} ; git clean -fdx'
                sleep $((retry * 10))
              fi
            done || exit 1
          else
            echo "初始化新源码仓库..."
            repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/$CPU -m $FEIL.xml --depth=1 || exit 1
            repo sync -c -j4 --no-tags --force-sync || exit 1
          fi
          cd $GITHUB_WORKSPACE

      - name: 配置 SukiSU
        run: |
          cd $GITHUB_WORKSPACE/work/kernel_platform || exit 1
          curl -LSs "https://raw.githubusercontent.com/ShirkNeko/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-dev || exit 1
          cd KernelSU || exit 1
          KSU_VERSION=$(expr $(git rev-list --count main) + 10606)
          sed -i "s/DKSU_VERSION=12800/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
          cd $GITHUB_WORKSPACE

      - name: 配置 SUSFS
        run: |
          cd $GITHUB_WORKSPACE/work || exit 1
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-$ANDROID_VERSION-$KERNEL_VERSION || exit 1
          git clone https://github.com/ExmikoN/SukiSU_patch.git || exit 1
          cp -r susfs4ksu/kernel_patches/50_add_susfs_in_gki-$ANDROID_VERSION-$KERNEL_VERSION.patch kernel_platform/common/
          cp -r susfs4ksu/kernel_patches/fs/* kernel_platform/common/fs/
          cp -r susfs4ksu/kernel_patches/include/linux/* kernel_platform/common/include/linux/
          cp -r SukiSU_patch/other/lz4k/include/linux/* kernel_platform/common/include/linux
          cp -r SukiSU_patch/other/lz4k/lib/* kernel_platform/common/lib
          cp -r SukiSU_patch/other/lz4k/crypto/* kernel_platform/common/crypto
          cd kernel_platform/common || exit 1
          sed -i 's/-32,12 +32,38/-32,11 +32,37/g' 50_add_susfs_in_gki-$ANDROID_VERSION-$KERNEL_VERSION.patch
          sed -i '/#include <trace\/hooks\/fs.h>/d' 50_add_susfs_in_gki-$ANDROID_VERSION-$KERNEL_VERSION.patch
          patch -p1 < 50_add_susfs_in_gki-$ANDROID_VERSION-$KERNEL_VERSION.patch || true
          cp ../../SukiSU_patch/hooks/syscall_hooks.patch ./
          patch -p1 -F 3 < syscall_hooks.patch || exit 1
          cp ../../SukiSU_patch/other/lz4k_patch/$KERNEL_VERSION/lz4kd.patch ./
          patch -p1 -F 3 < lz4kd.patch || true
          echo -e "\n# SUSFS 配置" >> arch/arm64/configs/gki_defconfig
          cat <<EOT >> arch/arm64/configs/gki_defconfig
CONFIG_KSU=y
CONFIG_KPM=y
CONFIG_KSU_SUSFS_SUS_SU=n
CONFIG_KSU_MANUAL_HOOK=y
CONFIG_KSU_SUSFS=y
CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y
CONFIG_KSU_SUSFS_SUS_PATH=y
CONFIG_KSU_SUSFS_SUS_MOUNT=y
CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y
CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y
CONFIG_KSU_SUSFS_SUS_KSTAT=y
CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n
CONFIG_KSU_SUSFS_TRY_UMOUNT=y
CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y
CONFIG_KSU_SUSFS_SPOOF_UNAME=y
CONFIG_KSU_SUSFS_ENABLE_LOG=y
CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y
CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y
CONFIG_KSU_SUSFS_OPEN_REDIRECT=y
CONFIG_CRYPTO_LZ4HC=y
CONFIG_CRYPTO_LZ4K=y
CONFIG_CRYPTO_LZ4KD=y
CONFIG_CRYPTO_842=y
EOT
          sed -i 's/check_defconfig//' build.config.gki
          git add -A && git commit -a -m "BUILD Kernel" || true
          cd $GITHUB_WORKSPACE

      - name: 设置内核名称
        run: |
          cd $GITHUB_WORKSPACE/work/kernel_platform || exit 1
          if [ ! -d "common/scripts" ]; then
            echo "目录不存在: common/scripts"
            exit 1
          fi
          sed -i "s/res=\"\$res\$(cat \"\$file\")\"/res=\"$KERNEL_NAME\"/g" common/scripts/setlocalversion
          cd $GITHUB_WORKSPACE

      - name: 构建内核
        run: |
          cd $GITHUB_WORKSPACE/work/kernel_platform || exit 1
          if [ ! -d "tools" ]; then
            echo "目录不存在: tools"
            exit 1
          fi
          tools/bazel run --config=fast --config=stamp --lto=thin //common:kernel_aarch64_dist -- --dist_dir=dist || exit 1

      - name: 打包 AnyKernel3
        run: |
          cd $GITHUB_WORKSPACE/work/kernel_platform/dist || exit 1
          if [ "$FEIL" = "oneplus_ace5_pro" ]; then
            git clone -b a5p https://github.com/aa123330/AnyKernel3.git --depth=1 || exit 1
          else
            git clone https://github.com/aa123330/AnyKernel3.git --depth=1 || exit 1
          fi
          rm -rf AnyKernel3/.git AnyKernel3/push.sh
          cp Image AnyKernel3/
          cd AnyKernel3 || exit 1
          cp $GITHUB_WORKSPACE/work/SukiSU_patch/kpm/patch_linux ./
          chmod 777 patch_linux
          ./patch_linux || exit 1
          rm -rf Image && mv oImage Image
          rm -rf patch_linux
          timestamp=$(date +%Y%m%d%H%M)
          output_zip="SuKiSu_${KSU_VERSION}_${FEIL}_${timestamp}.zip"
          zip -r "../${output_zip}" * || exit 1
          mkdir -p "$OUTPUT_DIR"
          mv "../${output_zip}" "$OUTPUT_DIR/"
          cd $GITHUB_WORKSPACE
          echo "构建完成！刷机包路径："
          echo "$OUTPUT_DIR/${output_zip}"

      - name: 上传刷机包
        uses: actions/upload-artifact@v4
        with:
          name: kernel-zip
          path: ${{ env.OUTPUT_DIR }}/SuKiSu_*.zip
